name: 🚀 CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  node_version: 22

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read

jobs:
  lint:
    name: ⬣ Lint
    runs-on: ubuntu-22.04
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4
        with:
          show-progress: false

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node_version }}

      - name: 📥 Download deps
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: 📁 Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: 🗄 Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 📦 Install dependencies
        run: pnpm install

      - name: 🏗 Build
        run: pnpm run build

      - name: 🔄 Generate Prisma client
        run: pnpm run prisma:generate

      - name: 🔬 Lint
        run: pnpm run lint

  format:
    name: 💅 Format
    runs-on: ubuntu-22.04
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4
        with:
          show-progress: false

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node_version }}

      - name: 📥 Download deps
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: 📁 Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: 🗄 Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 📦 Install dependencies
        run: pnpm install

      - name: 🏗 Build
        run: pnpm run build

      - name: 💅 Format
        run: pnpm run format:ci

  typecheck:
    name: ʦ TypeScript
    runs-on: ubuntu-22.04
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node_version }}

      - name: 📥 Download deps
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: 📁 Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: 🗄 Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 📦 Install dependencies
        run: pnpm install

      - name: 🏗 Build
        run: pnpm run build

      - name: 🔄 Generate Prisma client
        run: pnpm run prisma:generate

      - name: 🔎 Type check
        run: pnpm run typecheck

  test:
    name: ⚡ Tests
    runs-on: ubuntu-22.04
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node_version }}

      - name: 📥 Download deps
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: 📁 Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: 🗄 Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 📦 Install dependencies
        run: pnpm install

      - name: 🏄 Copy test env vars
        run: cp .env.example .env

      - name: 🏗 Build
        run: pnpm run build

      - name: 🔄 Generate Prisma client
        run: pnpm run prisma:generate

      - name: ⚡ Run vitest
        run: pnpm run test:ci

      - name: 🗒 Prepare coverage report in markdown
        uses: fingerprintjs/action-coverage-report-md@v2
        id: coverage
        with:
          srcBasePath: ./

      - name: 📌 Add coverage report to the job summary
        run: |
          echo "## Code Coverage" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.coverage.outputs.markdownReport }}" >> $GITHUB_STEP_SUMMARY
