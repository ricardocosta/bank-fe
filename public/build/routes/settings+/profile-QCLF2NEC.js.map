{
  "version": 3,
  "sources": ["../../../../app/routes/settings+/profile.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/settings+/profile.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/settings+/profile.tsx\");\n  import.meta.hot.lastModified = \"1702826676318.0107\";\n}\n// REMIX HMR END\n\nimport { invariantResponse } from \"@epic-web/invariant\";\nimport { json } from \"@remix-run/node\";\nimport { Link, Outlet, useMatches } from \"@remix-run/react\";\nimport { z } from \"zod\";\nimport { Spacer } from \"#app/components/spacer.tsx\";\nimport { Icon } from \"#app/components/ui/icon.tsx\";\nimport { requireUserId } from \"#app/utils/auth.server.ts\";\nimport { prisma } from \"#app/utils/db/db.server\";\nimport { cn } from \"#app/utils/misc.tsx\";\nimport { useUser } from \"#app/utils/user.ts\";\nexport const BreadcrumbHandle = z.object({\n  breadcrumb: z.any()\n});\nexport const handle = {\n  breadcrumb: <Icon name=\"file-text\">Edit Profile</Icon>\n};\nexport async function loader({\n  request\n}) {\n  const userId = await requireUserId(request);\n  const user = await prisma.user.findUnique({\n    where: {\n      id: userId\n    },\n    select: {\n      username: true\n    }\n  });\n  invariantResponse(user, \"User not found\", {\n    status: 404\n  });\n  return json({});\n}\nconst BreadcrumbHandleMatch = z.object({\n  handle: BreadcrumbHandle\n});\nexport default function EditUserProfile() {\n  _s();\n  const user = useUser();\n  const matches = useMatches();\n  const breadcrumbs = matches.map(m => {\n    const result = BreadcrumbHandleMatch.safeParse(m);\n    if (!result.success || !result.data.handle.breadcrumb) {\n      return null;\n    }\n    return <Link key={m.id} className=\"flex items-center\" to={m.pathname}>\n          {result.data.handle.breadcrumb}\n        </Link>;\n  }).filter(Boolean);\n  return <div className=\"m-auto mb-24 mt-16 max-w-3xl\">\n      <div className=\"container\">\n        <ul className=\"flex gap-3\">\n          <li>\n            <Link className=\"text-muted-foreground\" to={`/users/${user.username}`}>\n              Profile\n            </Link>\n          </li>\n          {breadcrumbs.map((breadcrumb, i, arr) => <li key={breadcrumb.key} className={cn(\"flex items-center gap-3\", {\n          \"text-muted-foreground\": i < arr.length - 1\n        })}>\n              \u25B6\uFE0F {breadcrumb}\n            </li>)}\n        </ul>\n      </div>\n      <Spacer size=\"xs\" />\n      <main className=\"mx-auto bg-muted px-6 py-8 md:container md:rounded-3xl\">\n        <Outlet />\n      </main>\n    </div>;\n}\n_s(EditUserProfile, \"ekXneKo9PG5ARIKFSJ8/gAy3lOA=\", false, function () {\n  return [useUser, useMatches];\n});\n_c = EditUserProfile;\nvar _c;\n$RefreshReg$(_c, \"EditUserProfile\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,kBAAqB;AAKrB,yBAA8B;AAC9B,gBAAuB;AAOT;AAlCd,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,uCAAyC,EAAE;AAAA,EACpF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAkC;AAClC,cAAY,IAAI,eAAe;AACjC;AAaO,IAAM,mBAAmB,EAAE,OAAO;AAAA,EACvC,YAAY,EAAE,IAAI;AACpB,CAAC;AACM,IAAM,SAAS;AAAA,EACpB,YAAY,mDAAC,QAAK,MAAK,aAAY,4BAAvB;AAAA;AAAA;AAAA;AAAA,GAAmC;AACjD;AAkBA,IAAM,wBAAwB,EAAE,OAAO;AAAA,EACrC,QAAQ;AACV,CAAC;AACc,SAAR,kBAAmC;AACxC,KAAG;AACH,QAAM,OAAO,QAAQ;AACrB,QAAM,UAAU,WAAW;AAC3B,QAAM,cAAc,QAAQ,IAAI,OAAK;AACnC,UAAM,SAAS,sBAAsB,UAAU,CAAC;AAChD,QAAI,CAAC,OAAO,WAAW,CAAC,OAAO,KAAK,OAAO,YAAY;AACrD,aAAO;AAAA,IACT;AACA,WAAO,mDAAC,QAAgB,WAAU,qBAAoB,IAAI,EAAE,UACrD,iBAAO,KAAK,OAAO,cADR,EAAE,IAAb;AAAA;AAAA;AAAA;AAAA,WAEH;AAAA,EACN,CAAC,EAAE,OAAO,OAAO;AACjB,SAAO,mDAAC,SAAI,WAAU,gCAClB;AAAA,uDAAC,SAAI,WAAU,aACb,6DAAC,QAAG,WAAU,cACZ;AAAA,yDAAC,QACC,6DAAC,QAAK,WAAU,yBAAwB,IAAI,UAAU,KAAK,QAAQ,IAAI,uBAAvE;AAAA;AAAA;AAAA;AAAA,aAEA,KAHF;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACC,YAAY,IAAI,CAAC,YAAY,GAAG,QAAQ,mDAAC,QAAwB,WAAW,GAAG,2BAA2B;AAAA,QAC3G,yBAAyB,IAAI,IAAI,SAAS;AAAA,MAC5C,CAAC,GAAG;AAAA;AAAA,QACM;AAAA,WAH0C,WAAW,KAApB;AAAA;AAAA;AAAA;AAAA,aAIvC,CAAK;AAAA,SAVT;AAAA;AAAA;AAAA;AAAA,WAWA,KAZF;AAAA;AAAA;AAAA;AAAA,WAaA;AAAA,IACA,mDAAC,UAAO,MAAK,QAAb;AAAA;AAAA;AAAA;AAAA,WAAkB;AAAA,IAClB,mDAAC,UAAK,WAAU,0DACd,6DAAC,YAAD;AAAA;AAAA;AAAA;AAAA,WAAQ,KADV;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OAlBG;AAAA;AAAA;AAAA;AAAA,SAmBL;AACJ;AACA,GAAG,iBAAiB,gCAAgC,OAAO,WAAY;AACrE,SAAO,CAAC,SAAS,UAAU;AAC7B,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,iBAAiB;AAElC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
